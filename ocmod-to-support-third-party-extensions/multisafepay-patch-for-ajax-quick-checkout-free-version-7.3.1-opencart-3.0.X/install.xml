<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>MultiSafepay: Patch for AJAX Quick Checkout 7.3.1 for OC version 3.0.X</name>
    <version>1.0</version>
    <code>MSP-AJAX-QUICK-CHECKOUT-PATCH</code>
    <author>MultiSafepay</author>
    <link>https://www.multisafepay.com</link>
    <file path="catalog/view/theme/default/template/extension/payment/multisafepay.twig">
    	<operation info="Set validations in view file">
            <search><![CDATA[{% if test_mode %}]]></search>
            <add position="before"><![CDATA[

<style>.show-always {display: inline-block !important;}</style>
<div class="ve-card">
    <div class="ve-card__header">
        <h4 class="ve-h4">{{ text_legend }}</h4>
    </div>
    <div class="ve-card__section">
            ]]>
            </add>
        </operation>
        <operation info="Adding SUB Final DIV - Set validations in view file">
            <search><![CDATA[</form>]]></search>
            <add position="after"><![CDATA[
    </div>
            ]]>
            </add>
        </operation>
        <operation info="Adding Final DIV - Set validations in view file">
            <search index="20"><![CDATA[{% endif %}]]></search>
            <add position="after"><![CDATA[
</div>
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/model/extension/d_quickcheckout/method.php">
    	<operation info="Set all payment methods at front">
            <search><![CDATA[public function getPaymentMethods($payment_address, $total){]]></search>
            <add position="before"><![CDATA[
	private function sortMethods($method_data) {
		$sort_order = array();
		foreach($method_data as $key => $value) {
			if(strpos($key, 'multisafepay') !== false && $value['sort_order']) {
				$sort_order[$key] = $this->config->get('payment_multisafepay_sort_order') . '.' . $value['sort_order'];
			}
			if(strpos($key, 'multisafepay') !== false && !$value['sort_order']) {
				$sort_order[$key] = $this->config->get('payment_multisafepay_sort_order');
			}
			if(strpos($key, 'multisafepay') === false) {
				$sort_order[$key] = $value['sort_order'];
			}
		}
		array_multisort($sort_order, SORT_ASC, SORT_NATURAL, $method_data);
		return $method_data;
	}

	private function extractPaymentMethodsArray($method, $extension, $total, $recurring = false, $method_data = array()) {
		if ($method && $extension['code'] === 'multisafepay') {
			$methods = $this->{'model_extension_payment_'.$extension['code']}->getMethods($this->session->data['payment_address'],
				$total);
			foreach ($methods as $msp_method) {
				$method_data[$msp_method['code']] = $msp_method;
			}
			return $method_data;
		}
		if ($method && $extension['code'] !== 'multisafepay' && $recurring) {
			if (property_exists($this->{'model_extension_payment_'.$extension['code']},
					'recurringPayments') && $this->{'model_extension_payment_'.$extension['code']}->recurringPayments()) {
				$method_data[$method['code']] = $method;
				return $method_data;
			}
		}
		if ($method && $extension['code'] !== 'multisafepay' && !$recurring) {
			$method_data[$method['code']] = $method;
			return $method_data;
		}
	}

	private function getMultiSafepayImageByGatewayRoute($route) {
		$gateways = $this->multisafepay->getGateways();
		$gateway_key = array_search($route, array_column($gateways, 'route'));
		if(isset($gateways[$gateway_key]['image'])) {
			return $gateways[$gateway_key]['image'];
		}
		return false;
	}

	public function __construct($registry) {
		parent::__construct($registry);
		$this->registry->set('multisafepay', new Multisafepay($registry));
		$this->registry->set('multisafepay_version_control', new Multisafepayversioncontrol($registry));
		$this->key_prefix = $this->multisafepay_version_control->getKeyPrefix();
	}
            ]]>
            </add>
        </operation>
    	<operation info="Set all payment methods at front">
            <search><![CDATA[$method_data[$result['code']] = $method;]]></search>
            <add position="replace"><![CDATA[
								$method_data = $this->extractPaymentMethodsArray($method, $result, $total, $recurring, $method_data);
            ]]>
            </add>
        </operation>
        <operation info="Set payment methods icons at front">
            <search><![CDATA[if(file_exists(DIR_IMAGE.'catalog/d_quickcheckout/payment/'.$result['code'].'.png')){]]></search>
            <add position="before"><![CDATA[
                    foreach ($method_data as $method_key => $multisafepay_method) {
						$method_data[$method_key]['image'] = '';
					}
					if ($this->config->get($this->key_prefix . 'multisafepay_use_payment_logo')) {
						$this->load->model('tool/image');
						foreach ($method_data as $multisafepay_method_key => $multisafepay_method) {
							$image = $this->getMultiSafepayImageByGatewayRoute($multisafepay_method['code']);
							if($image && file_exists(DIR_IMAGE.'catalog/multisafepay/' . $image . '.png')) {
								$method_data[$multisafepay_method_key]['image'] = $this->model_tool_image->resize( 'catalog/multisafepay/' . $image . '.png', 32, 32);
							}
						}
					}
            ]]>
            </add>
        </operation>
	</file>
    <file path="catalog/model/extension/payment/multisafepay.php">
        <operation info="Remove icons on title string">
            <search><![CDATA[$title = $this->getTitle($gateway['description'], $gateway['image']);]]></search>
            <add position="replace"><![CDATA[
					$title = $gateway['description'];
            ]]>
            </add>
        </operation>
    </file>
    <file path="catalog/controller/extension/module/d_quickcheckout.php">
        <operation info="Preventing that a new instance of Payment Component be created">
            <search><![CDATA[$data['riot_tags'] = $this->model_extension_d_quickcheckout_view->getRiotTags();]]></search>
            <add position="after"><![CDATA[
        foreach($data['riot_tags'] as $key => $value) {
            if (strpos($value, 'qc_payment.tag') !== false) {
                unset($data['riot_tags'][$key]);
            }
        }
                ]]>
            </add>
        </operation>
    </file>
</modification>
